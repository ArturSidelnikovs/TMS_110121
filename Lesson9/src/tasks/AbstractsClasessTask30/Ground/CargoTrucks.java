package tasks.AbstractsClasessTask30.Ground;

/*
В классе Грузовой добавляется  поле:
- Грузоподъёмность(т)
 */

/*
В конечных классах (Легковой, Грузовой, Военный, Гражданский)
разработать метод описание который будет возвращать составленную строку
с описанием всех характеристик объекта. В строку включить ещё один параметр мощность в киловаттах (кВ) .
Расчёт мощности в киловаттах производится в отдельном методе :
1 л.с = 0.74 кВ
 */

/*
Для грузового разработать метод который проверит можно ли загрузить в него xxx  груза
Метод должен проверять если это кол-во груза помещается в грузовик то выводит в консоль ”Грузовик загружен”,
если кол-во груза которое нужно загрузить больше чем то которое может влезть в наш грузовик то выводим
“Вам нужен грузовик побольше ”.
 */

/*
В конечных классах (Легковой, Грузовой, Военный, Гражданский)
разработать метод описание который будет возвращать составленную строку
с описанием всех характеристик объекта. В строку включить ещё один параметр мощность в киловаттах (кВ) .
Расчёт мощности в киловаттах производится в отдельном методе :
1 л.с = 0.74 кВ
 */

import tasks.AbstractsClasessTask30.PowerCalculation;

public class CargoTrucks extends GroundLevel {

    public int loadCapacity = 150;
    double distance;


    public CargoTrucks() {
        setBrand("Лада");
        setMaxSpeed(170);
        setWeight(4000);
        setHorsepower(400);
        setFuelСonsumption(30);
        setBodytype("Грузовой автомобиль");
        distance = 150;
    }

    public void Capacity(int cargo) {
        if (cargo <= loadCapacity) {
            System.out.println("Грузовик загружен");
        } else {
            System.out.println("Вам нужен грузовик побольше ");
        }
    }

    public void TypeCargo() {
        System.out.println(getBodytype() + " " + getBrand() + " весом " + getWeight() + " с максимальной скоростью " +
                getMaxSpeed() + " мощностью " + getHorsepower() + " лошадинных сил, равной " + calculationPower(getHorsepower()) +
                " киловатт, с расходом " + getFuelСonsumption() + " литров, на 100 км");
    }
}




